{"version":3,"sources":["GoodsList.tsx","App.tsx","index.tsx"],"names":["SortType","GoodsList","state","visibleGoods","props","goodsFromServer","isReversed","reverseList","setState","reverse","reset","sortByParam","sortBy","alphabet","sort","a","b","localeCompare","length","getVisible","buttonClass","flexLayout","modifiedGoods","this","className","map","good","type","onClick","React","Component","App","isListVisible","showList","ReactDOM","render","document","getElementById"],"mappings":"iKAGKA,E,iGAAAA,K,gBAAAA,E,qBAAAA,M,KAcE,IAAMC,EAAb,4MACEC,MAAQ,CACNC,aAAa,YAAK,EAAKC,MAAMC,iBAC7BC,YAAY,GAHhB,EAMEC,YAAc,WACZ,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBI,YAAaJ,EAAMI,WACnBH,aAAa,YAAKD,EAAMC,aAAaM,gBAT3C,EAaEC,MAAQ,WACN,EAAKF,SAAS,CACZL,aAAa,YAAK,EAAKC,MAAMC,iBAC7BC,YAAY,KAhBlB,EAoBEK,YAAc,SAACC,GACb,OAAQA,GACN,KAAKZ,EAASa,SACZ,EAAKL,UAAS,SAAAN,GAAK,MAAK,CACtBC,aAAa,YAAKD,EAAMC,aAAaW,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,WAGtE,MAEF,KAAKhB,EAASkB,OACZ,EAAKV,UAAS,SAAAN,GAAK,MAAK,CACtBC,aAAa,YAAKD,EAAMC,aAAaW,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEE,OAASH,EAAEG,iBA/B3E,EAyCEC,WAAa,WAIX,OAHyB,EAAKjB,MAAtBC,cA1CZ,4CAgDE,WAAU,IAAD,OACDiB,EAAc,+DACdC,EAAa,mDAEbC,EAAgBC,KAAKJ,aAE3B,OACE,sBAAKK,UAAU,QAAf,UAEE,sBAAKA,UAAS,UAAKH,EAAL,gBAAd,UACE,uCACA,oBAAIG,UAAU,OAAd,SACGF,EAAcG,KAAI,SAAAC,GAAI,OACrB,oBAEEF,UAAU,oDAFZ,SAIGE,GAHIA,WASb,sBAAKF,UAAS,UAAKH,GAAnB,UACE,wBACEM,KAAK,SACLC,QAAS,kBAAM,EAAKrB,eACpBiB,UAAS,UAAKJ,GAHhB,0BAQA,wBACEO,KAAK,SACLC,QAAS,kBAAM,EAAKjB,YAAYX,EAASa,WACzCW,UAAS,UAAKJ,GAHhB,8BAQA,wBACEO,KAAK,SACLC,QAAS,kBAAM,EAAKjB,YAAYX,EAASkB,SACzCM,UAAS,UAAKJ,GAHhB,4BAQA,wBACEO,KAAK,SACLC,QAAS,kBAAM,EAAKlB,SACpBc,UAAS,UAAKJ,GAHhB,6BAhGV,GAA+BS,IAAMC,WCX/BzB,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4Ca0B,E,4MApCb7B,MAAQ,CACN8B,eAAe,G,EAGjBC,SAAW,WACT,EAAKzB,SAAS,CAAEwB,eAAe,K,4CAGjC,WAAU,IAAD,OAELA,EACET,KAAKrB,MADP8B,cAMF,OACE,qBAAKR,UAAS,sBAHG,oDAGjB,SACGQ,EAEG,cAAC,EAAD,CAAW3B,gBAAiBA,IAG5B,wBACEsB,KAAK,SACLC,QAAS,kBAAM,EAAKK,YACpBT,UAAS,UAbC,gEAUZ,yB,GAxBMK,IAAMC,WCpBxBI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0c70c0ef.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nenum SortType {\n  length = 'length',\n  alphabet = 'alphabet',\n}\n\ninterface Props {\n  goodsFromServer: string[]\n}\n\ninterface State {\n  visibleGoods: string[];\n  isReversed: boolean;\n}\n\nexport class GoodsList extends React.Component<Props, State> {\n  state = {\n    visibleGoods: [...this.props.goodsFromServer],\n    isReversed: false,\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n      visibleGoods: [...state.visibleGoods.reverse()],\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      visibleGoods: [...this.props.goodsFromServer],\n      isReversed: false,\n    });\n  };\n\n  sortByParam = (sortBy: SortType) => {\n    switch (sortBy) {\n      case SortType.alphabet:\n        this.setState(state => ({\n          visibleGoods: [...state.visibleGoods.sort((a, b) => a.localeCompare(b))],\n        }));\n\n        break;\n\n      case SortType.length:\n        this.setState(state => ({\n          visibleGoods: [...state.visibleGoods.sort((a, b) => b.length - a.length)],\n        }));\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  getVisible = () => {\n    const { visibleGoods } = this.state;\n    const modifiedGoods = visibleGoods;\n\n    return modifiedGoods;\n  };\n\n  render() {\n    const buttonClass = 'btn-box bg-primary border-0 rounded text-light w-25 py-2 m-1';\n    const flexLayout = 'd-flex justify-content-center align-items-center';\n\n    const modifiedGoods = this.getVisible();\n\n    return (\n      <div className=\"w-100\">\n\n        <div className={`${flexLayout} flex-column`}>\n          <h1>Goods</h1>\n          <ul className=\"w-25\">\n            {modifiedGoods.map(good => (\n              <li\n                key={good}\n                className=\"border border-success rounded p-1 m-1 text-center\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className={`${flexLayout}`}>\n          <button\n            type=\"button\"\n            onClick={() => this.reverseList()}\n            className={`${buttonClass}`}\n          >\n            Reverse List\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortByParam(SortType.alphabet)}\n            className={`${buttonClass}`}\n          >\n            Sort by Alphabet\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.sortByParam(SortType.length)}\n            className={`${buttonClass}`}\n          >\n            Sort by Length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => this.reset()}\n            className={`${buttonClass}`}\n          >\n            Reset\n          </button>\n        </div>\n\n      </div>\n\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { GoodsList } from './GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  isListVisible: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isListVisible: false,\n  };\n\n  showList = () => {\n    this.setState({ isListVisible: true });\n  };\n\n  render() {\n    const {\n      isListVisible,\n    } = this.state;\n\n    const buttonClass = 'btn-box bg-primary border-0 rounded text-light w-25 py-2 m-1';\n    const flexLayout = 'd-flex justify-content-center align-items-center';\n\n    return (\n      <div className={`h-100 w-100 ${flexLayout}`}>\n        {isListVisible\n          ? (\n            <GoodsList goodsFromServer={goodsFromServer} />\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={() => this.showList()}\n              className={`${buttonClass}`}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}