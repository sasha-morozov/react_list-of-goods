{"version":3,"sources":["GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","props","goods","className","map","good","goodsFromServer","App","state","isListVisible","isReversed","showList","setState","reverseList","reset","sortByAlphabet","sort","a","b","localeCompare","sortByLength","length","this","modifiedGoods","reverse","buttonClass","flexLayout","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wPAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,oBAAIC,UAAU,OAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAEEF,UAAU,oDAFZ,SAIGE,GAHIA,SCRTC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA4IaC,E,4MAlIbC,MAAQ,CACNN,MAAM,GAAD,OAAMI,GACXG,eAAe,EACfC,YAAY,G,EAGdC,SAAW,WACT,EAAKC,SAAS,CAAEH,eAAe,K,EAGjCI,YAAc,WACc,EAAKL,MAAvBC,eAGN,EAAKG,UAAS,SAAAJ,GAAK,MAAK,CACtBE,YAAaF,EAAME,gB,EAKzBI,MAAQ,WACN,EAAKF,UAAS,SAAAJ,GAAK,MAAK,CACtBN,MAAM,GAAD,OAAMI,GACXI,YAAaF,EAAME,gB,EAIvBK,eAAiB,WACf,EAAKH,UAAS,SAAAJ,GAAK,MAAK,CACtBN,MAAM,YAAKM,EAAMN,MAAMc,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,Y,EAI1DG,aAAe,WACb,EAAKR,UAAS,SAAAJ,GAAK,MAAK,CACtBN,MAAM,YAAKM,EAAMN,MAAMc,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEG,OAASJ,EAAEI,gB,4CAIvD,WAAU,IAAD,OACP,EAIIC,KAAKd,MAHPN,EADF,EACEA,MACAO,EAFF,EAEEA,cAIEc,EAAgBrB,EANpB,EAGEQ,aAMAa,EAAgB,YAAIA,GAAeC,WAGrC,IAAMC,EAAc,+DACdC,EAAa,mDAEnB,OACE,qBAAKvB,UAAS,sBAAiBuB,GAA/B,SACGjB,EAEG,sBAAKN,UAAU,QAAf,UAEE,sBAAKA,UAAS,UAAKuB,EAAL,gBAAd,UACE,uCACA,cAAC,EAAD,CAAWxB,MAAOqB,OAGpB,sBAAKpB,UAAS,UAAKuB,GAAnB,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKf,eACpBV,UAAS,UAAKsB,GAHhB,0BAQA,wBACEE,KAAK,SACLC,QAAS,WACFnB,GAIL,EAAKM,kBAEPZ,UAAS,UAAKsB,GAThB,8BAcA,wBACEE,KAAK,SACLC,QAAS,WACFnB,GAIL,EAAKW,gBAEPjB,UAAS,UAAKsB,GAThB,4BAcA,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKd,SACpBX,UAAS,UAAKsB,GAHhB,yBAcJ,wBACEE,KAAK,SACLC,QAAS,kBAAM,EAAKjB,YACpBR,UAAS,UAAKsB,GAHhB,yB,GAtHMI,IAAMC,WCtBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a233121b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface Props {\n  goods: string[]\n}\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  const { goods } = props;\n\n  return (\n    <ul className=\"w-25\">\n      {goods.map(good => (\n        <li\n          key={good}\n          className=\"border border-success rounded p-1 m-1 text-center\"\n        >\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { GoodsList } from './GoodsList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  goods: string[];\n  isListVisible: boolean;\n  isReversed: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: [...goodsFromServer],\n    isListVisible: false,\n    isReversed: false,\n  };\n\n  showList = () => {\n    this.setState({ isListVisible: true });\n  };\n\n  reverseList = () => {\n    const { isListVisible } = this.state;\n\n    if (isListVisible) {\n      this.setState(state => ({\n        isReversed: !state.isReversed,\n      }));\n    }\n  };\n\n  reset = () => {\n    this.setState(state => ({\n      goods: [...goodsFromServer],\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState(state => ({\n      goods: [...state.goods.sort((a, b) => b.localeCompare(a))],\n    }));\n  };\n\n  sortByLength = () => {\n    this.setState(state => ({\n      goods: [...state.goods.sort((a, b) => b.length - a.length)],\n    }));\n  };\n\n  render() {\n    const {\n      goods,\n      isListVisible,\n      isReversed,\n    } = this.state;\n\n    let modifiedGoods = goods;\n\n    if (isReversed) {\n      modifiedGoods = [...modifiedGoods].reverse();\n    }\n\n    const buttonClass = 'btn-box bg-primary border-0 rounded text-light w-25 py-2 m-1';\n    const flexLayout = 'd-flex justify-content-center align-items-center';\n\n    return (\n      <div className={`h-100 w-100 ${flexLayout}`}>\n        {isListVisible\n          ? (\n            <div className=\"w-100\">\n\n              <div className={`${flexLayout} flex-column`}>\n                <h1>Goods</h1>\n                <GoodsList goods={modifiedGoods} />\n              </div>\n\n              <div className={`${flexLayout}`}>\n                <button\n                  type=\"button\"\n                  onClick={() => this.reverseList()}\n                  className={`${buttonClass}`}\n                >\n                  Reverse List\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (!isListVisible) {\n                      return;\n                    }\n\n                    this.sortByAlphabet();\n                  }}\n                  className={`${buttonClass}`}\n                >\n                  Sort by Alphabet\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    if (!isListVisible) {\n                      return;\n                    }\n\n                    this.sortByLength();\n                  }}\n                  className={`${buttonClass}`}\n                >\n                  Sort by Length\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={() => this.reset()}\n                  className={`${buttonClass}`}\n                >\n                  Reset\n                </button>\n              </div>\n\n            </div>\n\n          )\n\n          : (\n            <button\n              type=\"button\"\n              onClick={() => this.showList()}\n              className={`${buttonClass}`}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}